(self.webpackChunkmihoyo_doc=self.webpackChunkmihoyo_doc||[]).push([[667],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./src/stories/2.ys/protocol.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/next/dist/compiled/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),C_D_work_Web_software_mihoyo_doc_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");function _createMdxContent(props){const _components={a:"a",code:"code",li:"li",p:"p",ul:"ul",...(0,C_D_work_Web_software_mihoyo_doc_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__.R)(),...props.components};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.W8,{title:"原神/协议"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["我们来讲讲原神大将军吧，真不愧是米哈游的一大支柱，研究者前仆后继地涌入",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://github.com/Grasscutters/Grasscutter",rel:"nofollow",children:"Grasscutter"}),"项目，完全就不害怕断更，或许唯一比较遗憾的是太大了。我们先来看看启动器Cultivation都干了些什么吧，它是一个Web应用，使用tauri进行构建，别管它是什么反正和Electron功能类似。嗯……用react编写，说实在的不是很想看，好吧，直接说结论，我们可以发现很多的一键端实际上并没有Cultivation这个启动器，而是让你手动去替换客户端文件，这实际就是启动器做的一件事，底部是核心功能栏，其定义在",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"src/ui/Main.tsx"}),"的ServerLaunchSection部分，于是在相应的",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"src/ui/components/ServerLaunchSection.tsx"}),"我们找到了两个关键函数，启动游戏",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"playGame()"}),"和启动服务器",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"launchServer()"}),"。在启动游戏中，其调用了函数",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"patchGame"}),"来进行游戏补丁，即替换客户端文件，具体实现是tauri的反射机制，调用",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"src-tauri/src/patch.rs"}),"对应的",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"patch_game()"}),"来实现。而启动器能做的另一些事情就是，帮你更新服务器文件、启动服务器和游戏，不过全都是tauri反射调用rust实现，这些在一键端中确实都挺好实现的，所以没有启动器确实不会有大问题。"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["来看看服务器Grasscutter吧，请记住这才是私服的核心所在。Java程序的入口是",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"(src/main/java/emu/grasscutter/)Grasscutter.java"}),"的静态",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"main()"}),"函数，但是这个类有个静态块static，所以它先被执行，里面无非就是配置加载和资源文件的检测，这些资源就是一堆的json用来定义游戏的各种行为，我们后面再说，然后回到主函数。起手就是一个",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Crypto.loadKeys()"}),"，嗯……说实话各种加密和证书认证都不在我的讨论范围内，接着创建CommandMap对象(定义于",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"command/CommandMap.java"}),")，它主要用于我们的服务器终端指令，在",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"scan()"}),"函数中通过反射机制来注册所有命令，其是带有注解",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@Command(……)"}),"的类，基本都定义于",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"command/commands/"}),"中，然后是一个DatabaseManager对象(定义于",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"database/DatabaseManager.java"}),"中)的初始化，很显然这是服务端用来和mongodb数据库交互用的，再然后是两个权限相关的东西，一个DefaultAuthentication是用户认证系统(在",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"auth/"}),"中)，另一个DefaultPermissionHandler是客户端执行服务端指令的权限系统(属于前面Command系的子系统)。"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["我们会启动两个服务器GameServer(",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"server/game/GameServer.java"}),")和HttpServer(",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"server/game/GameServer.java"}),")，这和崩坏3是类似的，前者是游戏运行的核心，后者则用于登入、内嵌网页、下载等相关服务。Http服务器通过Javalin库实现，它是一个轻量级的框架用于套在Jetty服务器上，我们其实不用关心这么多，只要知道服务器为每个url返回什么内容即可，其关键在于后面一系列addRouter的方法，其要求类有",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"applyRoutes"}),"来实现映射，这些类分散地定义于",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"server/http/dispatch/"}),"、",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"server/http/documentation/"}),"和",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"server/http/handlers/"}),"下，至于含义直接看英语翻译大概就能懂，比如Region服务器选区、Log游戏日志(没dump完全)、Generic第三方、Announcements公告、Authentication登入、Gacha抽卡(应该指记录)等等。"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["游戏服务器GameServer就有些复杂了，首先我们注意到其继承于KcpServer(外部库位于",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"lib/kcp-1.5.1.jar"}),")，这是一种快速可靠的通信协议，其实它怎么工作的对我们而言不是很重要，只要知道其依赖一个基础协议构成并使用字节流通信，此程序引用库的源码是由",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://github.com/l42111996/java-Kcp",rel:"nofollow",children:"java-Kcp"}),"改进的，其基于netty库，此库给出了一套nio的框架(异步(也称非阻塞)事件驱动)，这些都是用来提高服务器响应性能的，于我们而言其实是无所谓的，注意到kcp的实现使用的是DatagramChannel，也就是说其基于UDP协议进行通信。所有的事件监听位于",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"server/game/GameSessionManager.java"}),"的KcpListener中，onConnected表示成功连接，这时你可能会想udp协议有连接的概念吗？其实，连接的概念都只是一厢情愿，就算是tcp也不存在实质性的连接，双方都只是拿着个IO通道，是否真的处于连接之中，还是得靠周期性的发送存活确认。"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"成功连接上后，服务器会创建一个GameSession对象来表示客户端，如之前所说这玩意是udp所以也不会有什么监听事件(Ukcp对象？)；"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["在",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"handleReceive"}),"进行kcp包的处理，过程就是通过Ukcp得到GameSession，让它通过",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"handleReceive"}),"进行处理；","\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"收到数据包后要先解密，然后是数据包的首尾两字节(short形状时：首=17767，尾=-30293)检测；"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"中间的前几个数据分别为为2字节指令码、2字节头长度、4字节数据长度，然后就跟着数据头和核心数据，读取解析以后，将关键的指令opcode、数据头header和数据payload送入服务器的PacketHandler进行处理；"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["所有的指令在",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"server/game/GameServerPacketHandler.java"}),"中被注册，其对应带有注解",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@Opcodes(……)"}),"的类，基本都位于",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"server/packet/recv"}),"中，通过handle函数进行处理；"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["在指令处理中，大量涉及客户端对象在服务端的实例，这些对象基本都定义于",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"game/"}),"下，算是整个游戏运行的核心。"]}),"\n"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["在",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"handleClose"}),"处理断开连接，非常的朴实无华，移除对象并登出。另外，服务器向客户端发送的指令在",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"server/packet/send"}),"中，主要通过Player对象(定义于",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"game/player/Player.java"}),")的",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"sendPacket"}),"实现，不过其本质通过GameSession的",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"send"}),"；"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["值得注意的是，除了客户端反应数据，还有服务端主动推送数据，其借助同样的函数，而相关的指令全都在",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"src/generated/main\\java/emu/grasscutter/net/proto/"}),"中。"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"看完GameServer的包处理系统后，另一重要部分是游戏系统，它们均为BaseGameSystem的子类，其用于指导整个游戏的运行过程，包括背包、抽卡、商店、家园、秘境、战斗、聊天等等各个方面，而相关的参数配置全都在资源文件Resources的json中，而相应的计算逻辑则在Resources的lua脚本中，如果说这么多东西全都是破解出来的，只能说确实厉害得令人佩服，因为原神的服务器不单纯只是一个数据中心，还包含了各种体系的运作过程，是十分复杂的。"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["服务器看完了，再回到主流程，",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"PluginManager"}),"用于插件管理，后面的话就是服务器启动(前面只是定义)和资源Resources的加载了，所谓启动分两种情形，GameServer直接启动就行，而对于HttpServer还需在1111端口启动一个DispatchServer(定义于",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"server/dispatch/DispatchServer.java"}),")，作用就是用来游戏热更新的，我们也见过了，不想讲太多。原神的服务器内核确实过于庞大了，但通过我上面的解说，至少对整体框架有了一定认识，我觉得这就足够了。"]})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,C_D_work_Web_software_mihoyo_doc_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__.R)(),...props.components};return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,{...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}},"./node_modules/memoizerific sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/memoizerific sync recursive",module.exports=webpackEmptyContext},"./node_modules/next/dist/compiled/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";var f=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner;function p(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&"key"!==b&&"ref"!==b&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l,exports.jsx=p,exports.jsxs=p},"./node_modules/next/dist/compiled/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__("./node_modules/next/dist/compiled/react/cjs/react-jsx-runtime.production.min.js")}}]);